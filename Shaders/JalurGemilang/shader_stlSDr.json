{
 "ver": "0.1",
 "info": {
  "id": "stlSDr",
  "date": "1625512258",
  "viewed": 56,
  "name": "Jalur Gemilang - Malaysia",
  "description": "Greetings from Kuala Lumpur, Malaysia.\nMZIskandar | Radnaksizm",
  "likes": 9,
  "published": "Public",
  "usePreview": 0,
  "tags": [
   "flag",
   "malaysia",
   "malaysian"
  ],
  "hasliked": 0,
  "parentid": "",
  "parentname": ""
 },
 "renderpass": [
  {
   "inputs": [],
   "outputs": [
    {
     "id": "4dfGRr",
     "channel": 0
    }
   ],
   "code": "// \"The MALAYSIAN Flag\"\n// by MZIskandar, Kuala Lumpur, Malaysia.\n// Blog: http://digitalspine.blogspot.com\n// Twitter: @mziskandar\n// learned form Martijn Steinrucken aka The Art of Code/BigWings - 2020 [https://www.shadertoy.com/view/flsXRM]\n// and jjovanovski [https://www.shadertoy.com/view/ftlSDr]\n// ..and FabriceNeyret2 tips.\n\n#define PI 3.14159265359\n#define TAU (2. * PI)\n\nvec3 RED = vec3(204.0/255.0, 0.0, 0.0);\nvec3 WHITE = vec3(1.0);\nvec3 BLUE = vec3(0.0, 0.0, 102.0/255.0);\nvec3 YELLOW = vec3(254.0/255.0, 204.0/255.0, 0.0);\n\nfloat drawCircle (vec2 uv, vec2 pos, float radius){\n    return float(smoothstep(radius, radius - 0.002, length(uv - pos)));\n}\n\nfloat Star14(vec2 uv, float size) {\n    float a = mod( atan(uv.x,uv.y)*14.,TAU ) / TAU -PI/TAU,\n      angle = PI*(.5+.2),\n          d = length(uv)*  sin(angle+abs(a)),\n          w = fwidth(d);\n    return length(uv)>.4 ? 0. : smoothstep(size + w, size - w, d);\n}\n\nvec2 Remap(vec2 p, float b, float l, float t, float r) {\n    return vec2( (p.x-l) / (r-l), (p.y-b) / (t-b));\n}\n\nvec3 Flag(vec2 uv) {\n\n    vec3 col = BLUE;\n    vec2 st = Remap(uv, .384, 0.0, 1.0, 0.5);\n    if(st.x>0. && st.x<1. && st.y>0. && st.y<1.) {\n        vec2 stM = Remap(uv, 0.1, 0.1, 0.8, 0.5);\n        float Moon = clamp( drawCircle(stM, vec2(0.23,0.85), 0.35)-drawCircle(stM, vec2(0.31,0.85), 0.30) ,0.0,1.0);\n        vec2 stS = Remap(uv, 0.69, 0.34, 1.47, 0.8);\n        float Star = Star14(stS.xy, 0.1);\n        col += vec3(abs((Moon + Star))) * YELLOW;\n    } else {\n        float y = sin(uv.y*PI*13.);\n        float w = fwidth(y);\n        float stripes = smoothstep(-w, w, y);\n        w = fwidth(uv.y);\n        col = mix(WHITE, RED, stripes);\n    }\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float t = uv.x*7.-2.*iTime+uv.y*3.;\n    uv.y += sin(t)*.05;\n    \n    vec3 col = Flag(uv);\n    \n    col *= .7+cos(t)*.3;\n    fragColor = vec4(col,0.0);\n}",
   "name": "Image",
   "description": "",
   "type": "image"
  }
 ]
}